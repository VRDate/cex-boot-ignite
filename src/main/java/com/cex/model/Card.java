/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.cex.model;

import java.io.*;

/**
 * Card definition.
 *
 * Code generated by Apache Ignite Schema Import utility: 03/10/2016.
 */
public class Card implements Serializable {
    /** */
    private static final long serialVersionUID = 0L;

    /** Value for cardId. */
    private String cardId;

    /** Value for cardNo. */
    private String cardNo;

    /** Value for cardStatus. */
    private Short cardStatus;

    /** Value for createdTime. */
    private java.sql.Timestamp createdTime;

    /** Value for lastUpdateTime. */
    private java.sql.Timestamp lastUpdateTime;

    /** Value for cardUpc. */
    private String cardUpc;

    /** Value for assignedDp. */
    private Integer assignedDp;

    /** Value for assignedStore. */
    private Integer assignedStore;

    /**
     * Empty constructor.
     */
    public Card() {
        // No-op.
    }

    /**
     * Full constructor.
     */
    public Card(
        String cardId,
        String cardNo,
        Short cardStatus,
        java.sql.Timestamp createdTime,
        java.sql.Timestamp lastUpdateTime,
        String cardUpc,
        Integer assignedDp,
        Integer assignedStore
    ) {
        this.cardId = cardId;
        this.cardNo = cardNo;
        this.cardStatus = cardStatus;
        this.createdTime = createdTime;
        this.lastUpdateTime = lastUpdateTime;
        this.cardUpc = cardUpc;
        this.assignedDp = assignedDp;
        this.assignedStore = assignedStore;
    }

    /**
     * Gets cardId.
     *
     * @return Value for cardId.
     */
    public String getCardId() {
        return cardId;
    }

    /**
     * Sets cardId.
     *
     * @param cardId New value for cardId.
     */
    public void setCardId(String cardId) {
        this.cardId = cardId;
    }

    /**
     * Gets cardNo.
     *
     * @return Value for cardNo.
     */
    public String getCardNo() {
        return cardNo;
    }

    /**
     * Sets cardNo.
     *
     * @param cardNo New value for cardNo.
     */
    public void setCardNo(String cardNo) {
        this.cardNo = cardNo;
    }

    /**
     * Gets cardStatus.
     *
     * @return Value for cardStatus.
     */
    public Short getCardStatus() {
        return cardStatus;
    }

    /**
     * Sets cardStatus.
     *
     * @param cardStatus New value for cardStatus.
     */
    public void setCardStatus(Short cardStatus) {
        this.cardStatus = cardStatus;
    }

    /**
     * Gets createdTime.
     *
     * @return Value for createdTime.
     */
    public java.sql.Timestamp getCreatedTime() {
        return createdTime;
    }

    /**
     * Sets createdTime.
     *
     * @param createdTime New value for createdTime.
     */
    public void setCreatedTime(java.sql.Timestamp createdTime) {
        this.createdTime = createdTime;
    }

    /**
     * Gets lastUpdateTime.
     *
     * @return Value for lastUpdateTime.
     */
    public java.sql.Timestamp getLastUpdateTime() {
        return lastUpdateTime;
    }

    /**
     * Sets lastUpdateTime.
     *
     * @param lastUpdateTime New value for lastUpdateTime.
     */
    public void setLastUpdateTime(java.sql.Timestamp lastUpdateTime) {
        this.lastUpdateTime = lastUpdateTime;
    }

    /**
     * Gets cardUpc.
     *
     * @return Value for cardUpc.
     */
    public String getCardUpc() {
        return cardUpc;
    }

    /**
     * Sets cardUpc.
     *
     * @param cardUpc New value for cardUpc.
     */
    public void setCardUpc(String cardUpc) {
        this.cardUpc = cardUpc;
    }

    /**
     * Gets assignedDp.
     *
     * @return Value for assignedDp.
     */
    public Integer getAssignedDp() {
        return assignedDp;
    }

    /**
     * Sets assignedDp.
     *
     * @param assignedDp New value for assignedDp.
     */
    public void setAssignedDp(Integer assignedDp) {
        this.assignedDp = assignedDp;
    }

    /**
     * Gets assignedStore.
     *
     * @return Value for assignedStore.
     */
    public Integer getAssignedStore() {
        return assignedStore;
    }

    /**
     * Sets assignedStore.
     *
     * @param assignedStore New value for assignedStore.
     */
    public void setAssignedStore(Integer assignedStore) {
        this.assignedStore = assignedStore;
    }

    /** {@inheritDoc} */
    @Override public boolean equals(Object o) {
        if (this == o)
            return true;

        if (!(o instanceof Card))
            return false;

        Card that = (Card)o;

        if (cardId != null ? !cardId.equals(that.cardId) : that.cardId != null)
            return false;

        if (cardNo != null ? !cardNo.equals(that.cardNo) : that.cardNo != null)
            return false;

        if (cardStatus != null ? !cardStatus.equals(that.cardStatus) : that.cardStatus != null)
            return false;

        if (createdTime != null ? !createdTime.equals(that.createdTime) : that.createdTime != null)
            return false;

        if (lastUpdateTime != null ? !lastUpdateTime.equals(that.lastUpdateTime) : that.lastUpdateTime != null)
            return false;

        if (cardUpc != null ? !cardUpc.equals(that.cardUpc) : that.cardUpc != null)
            return false;

        if (assignedDp != null ? !assignedDp.equals(that.assignedDp) : that.assignedDp != null)
            return false;

        if (assignedStore != null ? !assignedStore.equals(that.assignedStore) : that.assignedStore != null)
            return false;

        return true;
    }

    /** {@inheritDoc} */
    @Override public int hashCode() {
        int res = cardId != null ? cardId.hashCode() : 0;

        res = 31 * res + (cardNo != null ? cardNo.hashCode() : 0);

        res = 31 * res + (cardStatus != null ? cardStatus.hashCode() : 0);

        res = 31 * res + (createdTime != null ? createdTime.hashCode() : 0);

        res = 31 * res + (lastUpdateTime != null ? lastUpdateTime.hashCode() : 0);

        res = 31 * res + (cardUpc != null ? cardUpc.hashCode() : 0);

        res = 31 * res + (assignedDp != null ? assignedDp.hashCode() : 0);

        res = 31 * res + (assignedStore != null ? assignedStore.hashCode() : 0);

        return res;
    }

    /** {@inheritDoc} */
    @Override public String toString() {
        return "Card [cardId=" + cardId +
            ", cardNo=" + cardNo +
            ", cardStatus=" + cardStatus +
            ", createdTime=" + createdTime +
            ", lastUpdateTime=" + lastUpdateTime +
            ", cardUpc=" + cardUpc +
            ", assignedDp=" + assignedDp +
            ", assignedStore=" + assignedStore +
            "]";
    }
}

