/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.cex.model;

import java.io.*;

/**
 * CardTransaction definition.
 *
 * Code generated by Apache Ignite Schema Import utility: 03/10/2016.
 */
public class CardTransaction implements Serializable {
    /** */
    private static final long serialVersionUID = 0L;

    /** Value for transactionId. */
    private String transactionId;

    /** Value for cardId. */
    private String cardId;

    /** Value for type. */
    private int type;

    /** Value for loadValue. */
    private double loadValue;

    /** Value for transactionTime. */
    private java.sql.Timestamp transactionTime;

    /** Value for channelId. */
    private String channelId;

    /** Value for cardUpc. */
    private String cardUpc;

    /** Value for cardNo. */
    private String cardNo;

    /** Value for remard. */
    private String remard;

    /**
     * Empty constructor.
     */
    public CardTransaction() {
        // No-op.
    }

    /**
     * Full constructor.
     */
    public CardTransaction(
        String transactionId,
        String cardId,
        int type,
        double loadValue,
        java.sql.Timestamp transactionTime,
        String channelId,
        String cardUpc,
        String cardNo,
        String remard
    ) {
        this.transactionId = transactionId;
        this.cardId = cardId;
        this.type = type;
        this.loadValue = loadValue;
        this.transactionTime = transactionTime;
        this.channelId = channelId;
        this.cardUpc = cardUpc;
        this.cardNo = cardNo;
        this.remard = remard;
    }

    /**
     * Gets transactionId.
     *
     * @return Value for transactionId.
     */
    public String getTransactionId() {
        return transactionId;
    }

    /**
     * Sets transactionId.
     *
     * @param transactionId New value for transactionId.
     */
    public void setTransactionId(String transactionId) {
        this.transactionId = transactionId;
    }

    /**
     * Gets cardId.
     *
     * @return Value for cardId.
     */
    public String getCardId() {
        return cardId;
    }

    /**
     * Sets cardId.
     *
     * @param cardId New value for cardId.
     */
    public void setCardId(String cardId) {
        this.cardId = cardId;
    }

    /**
     * Gets type.
     *
     * @return Value for type.
     */
    public int getType() {
        return type;
    }

    /**
     * Sets type.
     *
     * @param type New value for type.
     */
    public void setType(int type) {
        this.type = type;
    }

    /**
     * Gets loadValue.
     *
     * @return Value for loadValue.
     */
    public double getLoadValue() {
        return loadValue;
    }

    /**
     * Sets loadValue.
     *
     * @param loadValue New value for loadValue.
     */
    public void setLoadValue(double loadValue) {
        this.loadValue = loadValue;
    }

    /**
     * Gets transactionTime.
     *
     * @return Value for transactionTime.
     */
    public java.sql.Timestamp getTransactionTime() {
        return transactionTime;
    }

    /**
     * Sets transactionTime.
     *
     * @param transactionTime New value for transactionTime.
     */
    public void setTransactionTime(java.sql.Timestamp transactionTime) {
        this.transactionTime = transactionTime;
    }

    /**
     * Gets channelId.
     *
     * @return Value for channelId.
     */
    public String getChannelId() {
        return channelId;
    }

    /**
     * Sets channelId.
     *
     * @param channelId New value for channelId.
     */
    public void setChannelId(String channelId) {
        this.channelId = channelId;
    }

    /**
     * Gets cardUpc.
     *
     * @return Value for cardUpc.
     */
    public String getCardUpc() {
        return cardUpc;
    }

    /**
     * Sets cardUpc.
     *
     * @param cardUpc New value for cardUpc.
     */
    public void setCardUpc(String cardUpc) {
        this.cardUpc = cardUpc;
    }

    /**
     * Gets cardNo.
     *
     * @return Value for cardNo.
     */
    public String getCardNo() {
        return cardNo;
    }

    /**
     * Sets cardNo.
     *
     * @param cardNo New value for cardNo.
     */
    public void setCardNo(String cardNo) {
        this.cardNo = cardNo;
    }

    /**
     * Gets remard.
     *
     * @return Value for remard.
     */
    public String getRemard() {
        return remard;
    }

    /**
     * Sets remard.
     *
     * @param remard New value for remard.
     */
    public void setRemard(String remard) {
        this.remard = remard;
    }

    /** {@inheritDoc} */
    @Override public boolean equals(Object o) {
        if (this == o)
            return true;

        if (!(o instanceof CardTransaction))
            return false;

        CardTransaction that = (CardTransaction)o;

        if (transactionId != null ? !transactionId.equals(that.transactionId) : that.transactionId != null)
            return false;

        if (cardId != null ? !cardId.equals(that.cardId) : that.cardId != null)
            return false;

        if (type != that.type)
            return false;

        if (Double.compare(loadValue, that.loadValue) != 0)
            return false;

        if (transactionTime != null ? !transactionTime.equals(that.transactionTime) : that.transactionTime != null)
            return false;

        if (channelId != null ? !channelId.equals(that.channelId) : that.channelId != null)
            return false;

        if (cardUpc != null ? !cardUpc.equals(that.cardUpc) : that.cardUpc != null)
            return false;

        if (cardNo != null ? !cardNo.equals(that.cardNo) : that.cardNo != null)
            return false;

        if (remard != null ? !remard.equals(that.remard) : that.remard != null)
            return false;

        return true;
    }

    /** {@inheritDoc} */
    @Override public int hashCode() {
        int res = transactionId != null ? transactionId.hashCode() : 0;

        res = 31 * res + (cardId != null ? cardId.hashCode() : 0);

        res = 31 * res + type;

        long ig_hash_temp = Double.doubleToLongBits(loadValue);

        res = 31 * res + (int)(ig_hash_temp ^ (ig_hash_temp >>> 32));

        res = 31 * res + (transactionTime != null ? transactionTime.hashCode() : 0);

        res = 31 * res + (channelId != null ? channelId.hashCode() : 0);

        res = 31 * res + (cardUpc != null ? cardUpc.hashCode() : 0);

        res = 31 * res + (cardNo != null ? cardNo.hashCode() : 0);

        res = 31 * res + (remard != null ? remard.hashCode() : 0);

        return res;
    }

    /** {@inheritDoc} */
    @Override public String toString() {
        return "CardTransaction [transactionId=" + transactionId +
            ", cardId=" + cardId +
            ", type=" + type +
            ", loadValue=" + loadValue +
            ", transactionTime=" + transactionTime +
            ", channelId=" + channelId +
            ", cardUpc=" + cardUpc +
            ", cardNo=" + cardNo +
            ", remard=" + remard +
            "]";
    }
}

